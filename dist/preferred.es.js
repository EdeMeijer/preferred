function n(n,...t){let o=null,l=!1;return()=>(l||(o=n(...t),l=!0),o)}const t=n(u,[1]),o=n(u,[1],2),l=n(u,[1,2,5]);function u(n,t=10){const o=n.map(n=>({num:n,logNum:Math.log(n)})),l=Math.log(t);function u(n,u,r,a){let c=null,e=null;for(const{num:r,logNum:h}of o){const o=a((u-h)/l),s=r*Math.pow(t,o),f=Math.abs(n-s);(null===c||f<e)&&(c=s,e=f)}return c}function r(n){return o.map(({num:t,logNum:o})=>({num:t,targetExp:(n-o)/l}))}function a(n,t){const o=Math.log(n);return u(n,o,r(o),t)}return{floor:n=>a(n,Math.floor),ceil:n=>a(n,Math.ceil),bounds(n){const t=Math.log(n);r(t);return{floor:u(n,t,0,Math.floor),ceil:u(n,t,0,Math.ceil)}},round(n,t=null){const{floor:o,ceil:l}=this.bounds(n),u=null===t?o:t(o),r=null===t?l:t(l),a=null===t?n:t(n),c=Math.abs(a-u);return Math.abs(a-r)<=c?l:o}}}export{l as oneTwoFive,t as powerOfTen,o as powerOfTwo,u as sequence};
